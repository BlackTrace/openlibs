#if !defined(COLOR_CONSOLE_H)
	#define COLOR_CONSOLE_H

	#include <stdbool.h>
	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>
	#include <windows.h>

	#define COMMON_LVB_UNDERSCORE 0x8000
	#define COMMON_LVB_GRID_HORIZONTAL 0x400
	#define COMMON_LVB_GRID_LVERTICAL 0x800
	#define COMMON_LVB_GRID_RVERTICAL 0x1000
	
	typedef enum _Color
	{
		CLR_TEXT_RED = FOREGROUND_RED,				//文字红色
		CLR_BG_RED = BACKGROUND_RED,				//背景红色
		CLR_TEXT_BLUE = FOREGROUND_BLUE,			//文字蓝色
		CLR_BG_BLUE = BACKGROUND_BLUE,				//背景蓝色
		CLR_TEXT_GREEN = FOREGROUND_GREEN,			//文字绿色
		CLR_BG_GREEN = BACKGROUND_GREEN,			//背景绿色
		CLR_TEXT_YELLOW = FOREGROUND_RED|FOREGROUND_GREEN,	//文字黄色			
		CLR_BG_YELLOW = BACKGROUND_RED|BACKGROUND_GREEN,	//背景黄色
		CLR_TEXT_PINK = FOREGROUND_BLUE|FOREGROUND_RED,		//文字粉色
		CLR_BG_PINK = BACKGROUND_BLUE|BACKGROUND_RED,		//背景粉色
		CLR_TEXT_CYAN = FOREGROUND_BLUE|FOREGROUND_GREEN,	//文字青色
		CLR_BG_CYAN = BACKGROUND_BLUE|BACKGROUND_GREEN,		//背景青色
		CLR_TEXT_WHITE = FOREGROUND_RED|FOREGROUND_BLUE|FOREGROUND_GREEN,	//文字白色
		CLR_BG_WHITE = BACKGROUND_RED|BACKGROUND_BLUE|BACKGROUND_GREEN,		//背景白色
		CLR_TEXT_BRIGHT = FOREGROUND_INTENSITY,								//文字亮色
		CLR_BG_BRIGHT = BACKGROUND_INTENSITY,								//背景亮色
		CLR_TEXT_UNDERLINE = COMMON_LVB_UNDERSCORE,							//文字下划线
		CLR_TEXT_JAIL = COMMON_LVB_GRID_HORIZONTAL|\
						COMMON_LVB_GRID_LVERTICAL|\
						COMMON_LVB_GRID_RVERTICAL|\
						COMMON_LVB_UNDERSCORE,								//文字牢笼
	}Color;

	bool HyPrintColorText(const char *pText,USHORT color);
#endif
